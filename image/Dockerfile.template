# FROM redis:7.2.5 AS redis
# FROM nginx:1.27.0-alpine3.19-slim AS nginx

# Select the base image
FROM {{BASE_IMAGE}}

# Upgrade pip and install dependencies
RUN pip install --upgrade pip ipython starlette websockets uvicorn gunicorn redis python-multipart jinja2 fsdicts runtypes guardify

# Make the debian frontend non-interactive for apt installations
ENV DEBIAN_FRONTEND=noninteractive

# # Install NGINX
RUN apt update && \
	apt -y install nginx && \
	rm -rf /var/lib/apt/lists /var/cache/apt/archives

# Install Redis
RUN apt update && \
	apt -y install curl gpg && \
	curl -fsSL https://packages.redis.io/gpg | gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg && \
	echo "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb bullseye main"  > /etc/apt/sources.list.d/redis.list && \
	apt update && \
	apt -y install redis && \
	rm -rf /var/lib/apt/lists /var/cache/apt/archives

# # COPY --from=redis /lib /lib
# COPY --from=redis /usr/lib /usr/lib
# COPY --from=redis /usr/sbin /usr/sbin
# COPY --from=redis /usr/local /usr/local
# # COPY --from=redis /etc/redis /etc/redis

# COPY --from=nginx /lib /lib
# COPY --from=nginx /usr/lib /usr/lib
# COPY --from=nginx /usr/sbin /usr/sbin
# COPY --from=nginx /usr/local /usr/local
# COPY --from=nginx /etc/nginx /etc/nginx

# Copy default configurations
COPY configurations/nginx.conf /etc/nginx/nginx.conf
COPY configurations/redis.conf /etc/redis/redis.conf
COPY configurations/entrypoint.conf /etc/entrypoint/entrypoint.conf

# Copy default sources
COPY src /application

# Change working directory to application
WORKDIR /application/backend

# Specify stop signal
STOPSIGNAL SIGINT

# Set default command to run
CMD [ "/usr/local/bin/python", "/application/entrypoint.py" ]

# Create the certificate and the key
RUN openssl req -x509 -nodes -days 365 -newkey rsa:2048 -subj / -keyout /etc/ssl/private/server.key -out /etc/ssl/private/server.crt