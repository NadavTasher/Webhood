# Select the images to install from
FROM redis:7.2.5-bookworm AS redis
FROM nginx:1.27.0-bookworm AS nginx

# Select the base image
FROM python:{{PYTHON_VERSION}}-bookworm AS python

# Upgrade pip and install dependencies
RUN pip install --upgrade pip ipython starlette websockets uvicorn gunicorn redis python-multipart jinja2 fsdicts runtypes guardify

# Make the debian frontend non-interactive for apt installations
ENV DEBIAN_FRONTEND=noninteractive

# Install redis from image
COPY --from=redis /usr /usr

# Additional redis setup
RUN mkdir -p /etc/redis/conf.d

# Install nginx from image
COPY --from=nginx /usr /usr
COPY --from=nginx /etc/nginx/mime.types /etc/nginx/mime.types

# Additional nginx setup
RUN useradd -s /bin/false nginx && \
	mkdir -p /var/cache/nginx /etc/nginx/conf.d

# Copy default configurations
COPY configurations/nginx.conf /etc/nginx/nginx.conf
COPY configurations/redis.conf /etc/redis/redis.conf
COPY configurations/entrypoint.conf /etc/entrypoint/entrypoint.conf

# Copy default sources
COPY src /application

# Change working directory to application
WORKDIR /application/backend

# Specify stop signal
STOPSIGNAL SIGINT

# Set default command to run
CMD [ "/usr/local/bin/python", "/application/entrypoint.py" ]

# Create the certificate and the key
RUN openssl req -x509 -nodes -days 365 -newkey rsa:2048 -subj / -keyout /etc/ssl/private/server.key -out /etc/ssl/private/server.crt